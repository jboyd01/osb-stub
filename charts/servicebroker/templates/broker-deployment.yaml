kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      serviceAccount: {{ template "fullname" . }}-service
      containers:
      - name: osb-stub
        image: {{ .Values.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command:
        - /opt/servicebroker/servicebroker
        args:
        - --port
        - "8443"
        {{- if .Values.tls.cert}}
        - --tlsCert
        - "{{ .Values.tls.cert }}"
        {{- end}}
        {{- if .Values.tls.key}}
        - --tlsKey
        - "{{ .Values.tls.key }}"
        {{- end}}
        {{- if .Values.authenticate}}
        - --authenticate-k8s-token
        {{- end}}
        - -v
        - "5"
        - -logtostderr
        - --tls-cert-file
        - "/var/run/osb-stub/osbstub.crt"
        - --tls-private-key-file
        - "/var/run/osb-stub/osbstub.key"
        ports:
        - containerPort: 8443
        readinessProbe:
          tcpSocket:
            port: 8443
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        volumeMounts:
        - mountPath: /var/run/osb-stub
          name: osb-stub-ssl
          readOnly: true
      volumes:
      - name: osb-stub-ssl
        secret:
          defaultMode: 420
          secretName: osb-stub-osb-stub-osb-stub-cert
          items:
          - key: tls.crt
            path: osbstub.crt
          - key: tls.key
            path: osbstub.key
